---
- remote_user: root
  hosts: node
  tasks:
  - name: copy install node script
    copy: src=./start_node_centos_auth_1.28.sh dest=/tmp/start_node_centos_auth_1.28.sh
  - name: copy ca.crt 
    copy: src=../cert/{{ hostvars[inventory_hostname]['cluster_name'] }}/ca/ca.crt dest=/tmp/ca.crt
  - name: start the node
    vars:
     - cluster_name: "{{ hostvars[inventory_hostname]['cluster_name'] }}"
     - master_ip: "{{ hostvars[inventory_hostname]['master_ip'] }}"
     - apiserver_secure_port: "{{ hostvars[inventory_hostname]['apiserver_secure_port'] }}"
     - container_data_root: "{{ hostvars[inventory_hostname]['container_data_root'] }}"
     - cluster_dns: "{{ hostvars[inventory_hostname]['cluster_dns'] }}"
     - k8s_version: "{{ hostvars[inventory_hostname]['k8s_version'] | default('1.18.4') }}"
    command: /bin/sh /tmp/start_node_centos_auth_1.28.sh --cluster-name {{ cluster_name }} --master-ip {{ master_ip }} --container-data-root {{ container_data_root }} --cluster-dns {{ cluster_dns }} --k8s-version {{ k8s_version }}
    register: result
  - debug:
      msg: "{{ result.stdout }}"
  - debug:
      msg: "{{ result.stderr }}"
  - name: clean 
    command: rm -f "/tmp/*.sh"
  - name: update resolv.conf
    replace:
     destfile: /etc/resolv.conf
     regexp: '^(options rotate)'
     replace: '#\1'
